# golangci-lint configuration for static analysis of Go code

run:
  # default concurrency is a available CPU number
  concurrency: 8

  # timeout for analysis
  timeout: 1m

  # exit code when at least one issue was found
  issues-exit-code: 1

  # include test files or not
  tests: true

  # Enables skipping of directories:
  # vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # Don't download any modules
  modules-download-mode: readonly


# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true


# settings of specific linters
linters-settings:
  dupl:
    threshold: 100
  errcheck:
    check-type-assertions: false
    check-blank: true
  nestif:
    min-complexity: 5
  gocognit:
    min-complexity: 30
  goconst:
    min-len: 3
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
    disabled-tags:
      - experimental
      - opinionated
  godox:
    keywords:
      - TODO
      - BUG
      - FIXME
      - NOTE
      - HACK
  gofmt:
    simplify: true
  golint:
    min-confidence: 0.8
  govet:
    check-shadowing: false
  lll:
    line-length: 140
    tab-width: 1
  misspell:
    locale: US
    ignore-words:
      - hashicorp
      - Hashicorp
  nakedret:
    max-func-lines: 30
  whitespace:
    multi-if: false
    multi-func: false

linters:
  disable-all: true
  enable:
    - govet # Default linters
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - structcheck
    - varcheck
    - ineffassign
    - deadcode
    - typecheck
    - golint # Additional linters
    - gosec
    - unconvert
    - dupl
    - goconst
    - gocognit
    - gofmt
    - misspell
    - lll
    - unparam
    - nakedret
    - godox
    - whitespace
    - nestif
  fast: false

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gosec

    - text: "weak cryptographic primitive"
      linters:
        - gosec

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

  # Use exclude defaults
  exclude-use-default: true

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  # Show only new issues in unstaged changes or untracked files.
  new: false

  # Show only new issues created after git revision `REV`
  # new-from-rev: REV
